# 当前pipeline的名称
name: "camke-pipeline"
# 当前pipeline的版本
version: "1.0.0"
shell: "sh"

# 整个pipeline的环境变量
envs:
  - CMAKE_TOOLCHAIN_FILE=F:\\repos\\vcpkg\\scripts\\buildsystems\\vcpkg.cmake # 路径在windows上必须转义，因此如果要括起来的话，必须用双引号
  - VERSION_TAG=$(git tag --sort=-v:refname | head -n 1)

# 整个pipeline的工作目录
workdir: "F:\\repos\\personal\\playground\\cmake_learn"

stages:
  - cleanup
  - build
  - test
  - deploy
  - cleanup

skips:
  - deploy

build_job:
  stage: build
  actions:
    - pwd
    - cmake -S . -B build -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -G Ninja -DBUILD_TESTS=ON
    - cmake --build build -j8
  hooks:
    before:
      - echo $VERSION_TAG
      - "echo \"[HOOK] before STAGE_NAME: $STAGE_NAME, JOB_NAME: $JOB_NAME\""
      - exit 1
      - "echo \"[HOOK] before exit 1, STAGE_NAME: $STAGE_NAME, JOB_NAME: $JOB_NAME\""
    after:
      - "echo \"[HOOK] after STAGE_NAME: $STAGE_NAME, JOB_NAME: $JOB_NAME\""
      - "echo \"[HOOK] build dir: $(pwd)/build\""
      - "exit 1"
      - "echo \"[HOOK] after exit 1, STAGE_NAME: $STAGE_NAME, JOB_NAME: $JOB_NAME\""

test_job:
  stage: test
  actions:
    - cmake --build build -j8 --target unit_test
    - ctest --test-dir build

deploy_job:
  stage: deploy
  actions:
    - cmake --build build -j8 --target install
    - cmake --install build
  allow_failure: yes

cleanup_job:
  stage: cleanup
  actions:
    - rm -rf build
    - rm -rf install
  allow_failure: yes
  timeout: 5s
